package com.turn.browser.utils;

import cn.hutool.core.lang.UUID;
import cn.hutool.core.util.StrUtil;
import lombok.extern.slf4j.Slf4j;
import org.slf4j.MDC;

@Slf4j
public class TraceIdUtil {

    public static final String TRACE_ID = "traceId";

    /**
     * Create trace-id
     *
     * @param
     * @return java.lang.String
     */
    public static String createTraceId() {
        return StrUtil.removeAll(UUID.randomUUID().toString(), "-");
    }

    /**
     * Add global trace ID--the trace ID generated by default
     *
     * @param
     * @return void
     */
    public static void putTraceId() {
        try {
            MDC.put(TRACE_ID, createTraceId());
        } catch (Exception e) {
            log.error("Exception in adding trace ID", e);
        }
    }

    /**
     * Add global trace ID--the trace ID generated by default
     *
     * @param customKey custom key
     */
    public static void putCustomTraceId(String customKey) {
        try {
            MDC.put(customKey, createTraceId());
        } catch (Exception e) {
            log.error("Exception in adding trace ID", e);
        }
    }

    /**
     * Add global trace ID
     *
     * @param traceId trace ID
     */
    public static void putTraceId(String traceId) {
        try {
            if (StrUtil.isNotBlank(traceId)) {
                MDC.put(TRACE_ID, traceId);
            } else {
                log.error("Please enter the trace ID");
            }
        } catch (Exception e) {
            log.error("Exception in adding trace ID", e);
        }
    }

    /**
     * Get global trace ID
     *
     * @param
     * @return java.lang.String
     */
    public static String getTraceId() {
        String traceId = "";
        try {
            traceId = MDC.get(TRACE_ID);
        } catch (Exception e) {
            log.error("Exception in getting global trace ID", e);
        }
        return traceId;
    }

    /**
     * Delete global trace ID
     *
     * @param
     * @return void
     */
    public static void removeTraceId() {
        try {
            MDC.remove(TRACE_ID);
        } catch (Exception e) {
            log.error("Exception in deleting trace ID", e);
        }
    }

    /**
     * Delete global trace ID
     *
     * @param customKey custom key
     * @return void
     */
    public static void removeCustomTraceId(String customKey) {
        try {
            MDC.remove(customKey);
        } catch (Exception e) {
            log.error("Exception in deleting trace ID", e);
        }
    }
}
