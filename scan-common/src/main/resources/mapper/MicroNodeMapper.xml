<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turn.browser.dao.mapper.MicroNodeMapper">
  <resultMap id="BaseResultMap" type="com.turn.browser.dao.entity.MicroNode">
    <id column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="operation_addr" jdbcType="VARCHAR" property="operationAddr" />
    <result column="beneficiary" jdbcType="VARCHAR" property="beneficiary" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="electron_uri" jdbcType="VARCHAR" property="electronUri" />
    <result column="p2p_uri" jdbcType="VARCHAR" property="p2pUri" />
    <result column="rpc_uri" jdbcType="VARCHAR" property="rpcUri" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="is_operator" jdbcType="INTEGER" property="isOperator" />
    <result column="node_status" jdbcType="INTEGER" property="nodeStatus" />
    <result column="bubble_id" jdbcType="BIGINT" property="bubbleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    node_id, amount, operation_addr, beneficiary, `name`, details, electron_uri, p2p_uri, 
    rpc_uri, version, is_operator, node_status, bubble_id,  create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.turn.browser.dao.entity.MicroNodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from micro_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from micro_node
    where node_id = #{nodeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from micro_node
    where node_id = #{nodeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.turn.browser.dao.entity.MicroNodeExample">
    delete from micro_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.turn.browser.dao.entity.MicroNode">
    insert into micro_node (node_id, amount, operation_addr, 
      beneficiary, `name`, details, 
      electron_uri, p2p_uri, rpc_uri, 
      version, is_operator, node_status, 
      bubble_id,  create_time, 
      update_time)
    values (#{nodeId,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{operationAddr,jdbcType=VARCHAR}, 
      #{beneficiary,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{details,jdbcType=VARCHAR}, 
      #{electronUri,jdbcType=VARCHAR}, #{p2pUri,jdbcType=VARCHAR}, #{rpcUri,jdbcType=VARCHAR}, 
      #{version,jdbcType=VARCHAR}, #{isOperator,jdbcType=INTEGER}, #{nodeStatus,jdbcType=INTEGER}, 
      #{bubbleId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.turn.browser.dao.entity.MicroNode">
    insert into micro_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="operationAddr != null">
        operation_addr,
      </if>
      <if test="beneficiary != null">
        beneficiary,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="electronUri != null">
        electron_uri,
      </if>
      <if test="p2pUri != null">
        p2p_uri,
      </if>
      <if test="rpcUri != null">
        rpc_uri,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="isOperator != null">
        is_operator,
      </if>
      <if test="nodeStatus != null">
        node_status,
      </if>
      <if test="bubbleId != null">
        bubble_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="operationAddr != null">
        #{operationAddr,jdbcType=VARCHAR},
      </if>
      <if test="beneficiary != null">
        #{beneficiary,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="electronUri != null">
        #{electronUri,jdbcType=VARCHAR},
      </if>
      <if test="p2pUri != null">
        #{p2pUri,jdbcType=VARCHAR},
      </if>
      <if test="rpcUri != null">
        #{rpcUri,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="isOperator != null">
        #{isOperator,jdbcType=INTEGER},
      </if>
      <if test="nodeStatus != null">
        #{nodeStatus,jdbcType=INTEGER},
      </if>
      <if test="bubbleId != null">
        #{bubbleId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.turn.browser.dao.entity.MicroNodeExample" resultType="java.lang.Long">
    select count(*) from micro_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update micro_node
    <set>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.operationAddr != null">
        operation_addr = #{record.operationAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.beneficiary != null">
        beneficiary = #{record.beneficiary,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.electronUri != null">
        electron_uri = #{record.electronUri,jdbcType=VARCHAR},
      </if>
      <if test="record.p2pUri != null">
        p2p_uri = #{record.p2pUri,jdbcType=VARCHAR},
      </if>
      <if test="record.rpcUri != null">
        rpc_uri = #{record.rpcUri,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.isOperator != null">
        is_operator = #{record.isOperator,jdbcType=INTEGER},
      </if>
      <if test="record.nodeStatus != null">
        node_status = #{record.nodeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.bubbleId != null">
        bubble_id = #{record.bubbleId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update micro_node
    set node_id = #{record.nodeId,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      operation_addr = #{record.operationAddr,jdbcType=VARCHAR},
      beneficiary = #{record.beneficiary,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      details = #{record.details,jdbcType=VARCHAR},
      electron_uri = #{record.electronUri,jdbcType=VARCHAR},
      p2p_uri = #{record.p2pUri,jdbcType=VARCHAR},
      rpc_uri = #{record.rpcUri,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      is_operator = #{record.isOperator,jdbcType=INTEGER},
      node_status = #{record.nodeStatus,jdbcType=INTEGER},
      bubble_id = #{record.bubbleId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.turn.browser.dao.entity.MicroNode">
    update micro_node
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="operationAddr != null">
        operation_addr = #{operationAddr,jdbcType=VARCHAR},
      </if>
      <if test="beneficiary != null">
        beneficiary = #{beneficiary,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="electronUri != null">
        electron_uri = #{electronUri,jdbcType=VARCHAR},
      </if>
      <if test="p2pUri != null">
        p2p_uri = #{p2pUri,jdbcType=VARCHAR},
      </if>
      <if test="rpcUri != null">
        rpc_uri = #{rpcUri,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="isOperator != null">
        is_operator = #{isOperator,jdbcType=INTEGER},
      </if>
      <if test="nodeStatus != null">
        node_status = #{nodeStatus,jdbcType=INTEGER},
      </if>
      <if test="bubbleId != null">
        bubble_id = #{bubbleId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where node_id = #{nodeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.turn.browser.dao.entity.MicroNode">
    update micro_node
    set amount = #{amount,jdbcType=DECIMAL},
      operation_addr = #{operationAddr,jdbcType=VARCHAR},
      beneficiary = #{beneficiary,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      details = #{details,jdbcType=VARCHAR},
      electron_uri = #{electronUri,jdbcType=VARCHAR},
      p2p_uri = #{p2pUri,jdbcType=VARCHAR},
      rpc_uri = #{rpcUri,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      is_operator = #{isOperator,jdbcType=INTEGER},
      node_status = #{nodeStatus,jdbcType=INTEGER},
      bubble_id = #{bubbleId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where node_id = #{nodeId,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into micro_node
    (node_id, amount, operation_addr, beneficiary, `name`, details, electron_uri, p2p_uri, 
      rpc_uri, version, is_operator, node_status, bubble_id,  create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.nodeId,jdbcType=VARCHAR}, #{item.amount,jdbcType=DECIMAL}, #{item.operationAddr,jdbcType=VARCHAR}, 
        #{item.beneficiary,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.details,jdbcType=VARCHAR}, 
        #{item.electronUri,jdbcType=VARCHAR}, #{item.p2pUri,jdbcType=VARCHAR}, #{item.rpcUri,jdbcType=VARCHAR}, 
        #{item.version,jdbcType=VARCHAR}, #{item.isOperator,jdbcType=INTEGER}, #{item.nodeStatus,jdbcType=INTEGER}, 
        #{item.bubbleId,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP},
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into micro_node (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'node_id'.toString() == column.value">
          #{item.nodeId,jdbcType=VARCHAR}
        </if>
        <if test="'amount'.toString() == column.value">
          #{item.amount,jdbcType=DECIMAL}
        </if>
        <if test="'operation_addr'.toString() == column.value">
          #{item.operationAddr,jdbcType=VARCHAR}
        </if>
        <if test="'beneficiary'.toString() == column.value">
          #{item.beneficiary,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'details'.toString() == column.value">
          #{item.details,jdbcType=VARCHAR}
        </if>
        <if test="'electron_uri'.toString() == column.value">
          #{item.electronUri,jdbcType=VARCHAR}
        </if>
        <if test="'p2p_uri'.toString() == column.value">
          #{item.p2pUri,jdbcType=VARCHAR}
        </if>
        <if test="'rpc_uri'.toString() == column.value">
          #{item.rpcUri,jdbcType=VARCHAR}
        </if>
        <if test="'version'.toString() == column.value">
          #{item.version,jdbcType=VARCHAR}
        </if>
        <if test="'is_operator'.toString() == column.value">
          #{item.isOperator,jdbcType=INTEGER}
        </if>
        <if test="'node_status'.toString() == column.value">
          #{item.nodeStatus,jdbcType=INTEGER}
        </if>
        <if test="'bubble_id'.toString() == column.value">
          #{item.bubbleId,jdbcType=BIGINT}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>

  <select id="countStakingAmount" resultType="java.math.BigInteger">
    select sum(amount) from micro_node where node_status=1;
  </select>
  <select id="selectListByExample" parameterType="com.turn.browser.dao.entity.MicroNodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from micro_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>