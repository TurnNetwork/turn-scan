<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turn.browser.dao.mapper.ConfigMapper">
  <resultMap id="BaseResultMap" type="com.turn.browser.dao.entity.Config">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="module" jdbcType="VARCHAR" property="module" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="init_value" jdbcType="VARCHAR" property="initValue" />
    <result column="stale_value" jdbcType="VARCHAR" property="staleValue" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="range_desc" jdbcType="VARCHAR" property="rangeDesc" />
    <result column="active_block" jdbcType="BIGINT" property="activeBlock" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `module`, `name`, init_value, stale_value, `value`, range_desc, active_block, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.turn.browser.dao.entity.ConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.turn.browser.dao.entity.ConfigExample">
    delete from config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.turn.browser.dao.entity.Config">
    insert into config (id, `module`, `name`, 
      init_value, stale_value, `value`, 
      range_desc, active_block, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{module,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{initValue,jdbcType=VARCHAR}, #{staleValue,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{rangeDesc,jdbcType=VARCHAR}, #{activeBlock,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.turn.browser.dao.entity.Config">
    insert into config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="module != null">
        `module`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="initValue != null">
        init_value,
      </if>
      <if test="staleValue != null">
        stale_value,
      </if>
      <if test="value != null">
        `value`,
      </if>
      <if test="rangeDesc != null">
        range_desc,
      </if>
      <if test="activeBlock != null">
        active_block,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="module != null">
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="initValue != null">
        #{initValue,jdbcType=VARCHAR},
      </if>
      <if test="staleValue != null">
        #{staleValue,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="rangeDesc != null">
        #{rangeDesc,jdbcType=VARCHAR},
      </if>
      <if test="activeBlock != null">
        #{activeBlock,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.turn.browser.dao.entity.ConfigExample" resultType="java.lang.Long">
    select count(*) from config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.module != null">
        `module` = #{record.module,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.initValue != null">
        init_value = #{record.initValue,jdbcType=VARCHAR},
      </if>
      <if test="record.staleValue != null">
        stale_value = #{record.staleValue,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        `value` = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.rangeDesc != null">
        range_desc = #{record.rangeDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.activeBlock != null">
        active_block = #{record.activeBlock,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update config
    set id = #{record.id,jdbcType=INTEGER},
      `module` = #{record.module,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      init_value = #{record.initValue,jdbcType=VARCHAR},
      stale_value = #{record.staleValue,jdbcType=VARCHAR},
      `value` = #{record.value,jdbcType=VARCHAR},
      range_desc = #{record.rangeDesc,jdbcType=VARCHAR},
      active_block = #{record.activeBlock,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.turn.browser.dao.entity.Config">
    update config
    <set>
      <if test="module != null">
        `module` = #{module,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="initValue != null">
        init_value = #{initValue,jdbcType=VARCHAR},
      </if>
      <if test="staleValue != null">
        stale_value = #{staleValue,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        `value` = #{value,jdbcType=VARCHAR},
      </if>
      <if test="rangeDesc != null">
        range_desc = #{rangeDesc,jdbcType=VARCHAR},
      </if>
      <if test="activeBlock != null">
        active_block = #{activeBlock,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.turn.browser.dao.entity.Config">
    update config
    set `module` = #{module,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      init_value = #{initValue,jdbcType=VARCHAR},
      stale_value = #{staleValue,jdbcType=VARCHAR},
      `value` = #{value,jdbcType=VARCHAR},
      range_desc = #{rangeDesc,jdbcType=VARCHAR},
      active_block = #{activeBlock,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into config
    (id, `module`, `name`, init_value, stale_value, `value`, range_desc, active_block, 
      create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.module,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.initValue,jdbcType=VARCHAR}, #{item.staleValue,jdbcType=VARCHAR}, #{item.value,jdbcType=VARCHAR}, 
        #{item.rangeDesc,jdbcType=VARCHAR}, #{item.activeBlock,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into config (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'module'.toString() == column.value">
          #{item.module,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'init_value'.toString() == column.value">
          #{item.initValue,jdbcType=VARCHAR}
        </if>
        <if test="'stale_value'.toString() == column.value">
          #{item.staleValue,jdbcType=VARCHAR}
        </if>
        <if test="'value'.toString() == column.value">
          #{item.value,jdbcType=VARCHAR}
        </if>
        <if test="'range_desc'.toString() == column.value">
          #{item.rangeDesc,jdbcType=VARCHAR}
        </if>
        <if test="'active_block'.toString() == column.value">
          #{item.activeBlock,jdbcType=BIGINT}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>

</mapper>