<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turn.browser.dao.custommapper.SlashBusinessMapper">
    <update id="setException">
        update `staking`
        set `exception_status` = 3
        where `node_id` = #{nodeId}
          and `staking_block_num` = #{stakingBlockNum};
        update `node`
        set `exception_status` = 3
        where `node_id` = #{nodeId}
          and `staking_block_num` = #{stakingBlockNum};
    </update>

    <select id="getException" resultType="com.turn.browser.dao.entity.Staking">
        select `node_id` as nodeId,
        `staking_block_num` as stakingBlockNum
        from staking
        where `node_id` in
        <foreach open="(" collection="list" item="nodeId" separator="," close=")">#{nodeId}</foreach>
        and `exception_status` = 3;
    </select>
    <update id="slashNode" parameterType="com.turn.browser.bean.CusSlash">
        update `delegation` set
        `delegate_released` = `delegate_released` + `delegate_hes` + `delegate_locked`,
        `delegate_hes` = 0,
        `delegate_locked` = 0
        where `node_id` = #{nodeId}
        and `staking_block_num` = #{stakingBlockNum}
        and `is_history` = 2;
        update `node` set
        `leave_time` = #{time},
        <if test="leaveNum != null">
            `leave_num` = #{leaveNum},
        </if>
        `status` = #{codeStatus},
        `staking_reduction_epoch` = #{codeStakingReductionEpoch},
        `staking_reduction` = #{codeRemainRedeemAmount},
        `total_value` = 0,
        `staking_locked` = 0,
        `staking_hes` = 0,
        `stat_delegate_released` = `stat_delegate_released` + `stat_delegate_value`,
        `stat_delegate_value` = 0,
        `stat_valid_addrs` = 0,
        `stat_invalid_addrs` = (select count(distinct delegate_addr) from delegation where node_id = #{nodeId} and is_history = 2),
        `stat_slash_multi_qty` = `stat_slash_multi_qty` +1,
        `is_consensus` = 2,
        `is_settle` = 2,
        `exception_status`=5
        where `node_id` = #{nodeId};
        update `staking` set
        `leave_time` = #{time},
        <if test="leaveNum != null">
            `leave_num` = #{leaveNum},
        </if>
        `status` = #{codeStatus},
        `staking_reduction_epoch` = #{codeStakingReductionEpoch},
        `staking_reduction` = #{codeRemainRedeemAmount},
        `staking_locked` = 0,
        `staking_hes` = 0,
        `stat_delegate_released` = `stat_delegate_hes` + `stat_delegate_locked`,
        `stat_delegate_hes` = 0,
        `stat_delegate_locked` = 0,
        `is_consensus` = 2,
        `is_settle` = 2,
        `exception_status`=5
        where `node_id` = #{nodeId}
        and `staking_block_num` = #{stakingBlockNum};
        update `slash` set
        `code_slash_value` = #{codeSlashValue},
        `code_reward_value` = #{codeRewardValue},
        `is_quit` = 1,
        `is_handle` = 1
        where id = #{id};
    </update>

    <update id="updateUnStakeFreezeDuration" parameterType="com.turn.browser.dao.param.ppos.Report">
        update `node`
        set `un_stake_freeze_duration` = #{unStakeFreezeDuration},
            `un_stake_end_block`       = #{unStakeEndBlock}
        where `node_id` = #{nodeId};
        update `staking`
        set `un_stake_freeze_duration` = #{unStakeFreezeDuration},
            `un_stake_end_block`       = #{unStakeEndBlock}
        where `node_id` = #{nodeId}
          and `staking_block_num` = #{stakingBlockNum};
    </update>
</mapper>